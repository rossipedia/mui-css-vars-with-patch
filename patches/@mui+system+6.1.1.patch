diff --git a/node_modules/@mui/system/createTheme/applyStyles.js b/node_modules/@mui/system/createTheme/applyStyles.js
index 9a45e1d..306eef4 100644
--- a/node_modules/@mui/system/createTheme/applyStyles.js
+++ b/node_modules/@mui/system/createTheme/applyStyles.js
@@ -69,8 +69,19 @@ export default function applyStyles(key, styles) {
       return styles;
     }
     if (selector.includes('data-') || selector.includes('.')) {
+      // Filter out child elements that might be forcing another theme
+      let excludeOtherThemesSelector = '';
+      const otherThemes = Object.keys(theme.colorSchemes).filter((n) => n !== key);
+      if (otherThemes.length > 0) {
+        const otherThemesSelector = otherThemes
+          // Optional chaining is to make TS happy, but it's actually not optional because of line 74
+          .map((s) => `* ${theme.getColorSchemeSelector?.(s).replace(/\s*&$/, '')}`)
+          .join(', ');
+
+        excludeOtherThemesSelector = `:not(:has(${otherThemesSelector}))`;
+      }
       // '*' is required as a workaround for Emotion issue (https://github.com/emotion-js/emotion/issues/2836)
-      selector = `*:where(${selector.replace(/\s*&$/, '')}) &`;
+      selector = `*:where(${selector.replace(/\s*&$/, '')})${excludeOtherThemesSelector} &`;
     }
     return {
       [selector]: styles
diff --git a/node_modules/@mui/system/modern/createTheme/applyStyles.js b/node_modules/@mui/system/modern/createTheme/applyStyles.js
index 9a45e1d..306eef4 100644
--- a/node_modules/@mui/system/modern/createTheme/applyStyles.js
+++ b/node_modules/@mui/system/modern/createTheme/applyStyles.js
@@ -69,8 +69,19 @@ export default function applyStyles(key, styles) {
       return styles;
     }
     if (selector.includes('data-') || selector.includes('.')) {
+      // Filter out child elements that might be forcing another theme
+      let excludeOtherThemesSelector = '';
+      const otherThemes = Object.keys(theme.colorSchemes).filter((n) => n !== key);
+      if (otherThemes.length > 0) {
+        const otherThemesSelector = otherThemes
+          // Optional chaining is to make TS happy, but it's actually not optional because of line 74
+          .map((s) => `* ${theme.getColorSchemeSelector?.(s).replace(/\s*&$/, '')}`)
+          .join(', ');
+
+        excludeOtherThemesSelector = `:not(:has(${otherThemesSelector}))`;
+      }
       // '*' is required as a workaround for Emotion issue (https://github.com/emotion-js/emotion/issues/2836)
-      selector = `*:where(${selector.replace(/\s*&$/, '')}) &`;
+      selector = `*:where(${selector.replace(/\s*&$/, '')})${excludeOtherThemesSelector} &`;
     }
     return {
       [selector]: styles
diff --git a/node_modules/@mui/system/node/createTheme/applyStyles.js b/node_modules/@mui/system/node/createTheme/applyStyles.js
index eda64c6..c36b894 100644
--- a/node_modules/@mui/system/node/createTheme/applyStyles.js
+++ b/node_modules/@mui/system/node/createTheme/applyStyles.js
@@ -75,8 +75,19 @@ function applyStyles(key, styles) {
       return styles;
     }
     if (selector.includes('data-') || selector.includes('.')) {
+      // Filter out child elements that might be forcing another theme
+      let excludeOtherThemesSelector = '';
+      const otherThemes = Object.keys(theme.colorSchemes).filter((n) => n !== key);
+      if (otherThemes.length > 0) {
+        const otherThemesSelector = otherThemes
+          // Optional chaining is to make TS happy, but it's actually not optional because of line 74
+          .map((s) => `* ${theme.getColorSchemeSelector?.(s).replace(/\s*&$/, '')}`)
+          .join(', ');
+
+        excludeOtherThemesSelector = `:not(:has(${otherThemesSelector}))`;
+      }
       // '*' is required as a workaround for Emotion issue (https://github.com/emotion-js/emotion/issues/2836)
-      selector = `*:where(${selector.replace(/\s*&$/, '')}) &`;
+      selector = `*:where(${selector.replace(/\s*&$/, '')})${excludeOtherThemesSelector} &`;
     }
     return {
       [selector]: styles
